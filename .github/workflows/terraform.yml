name: Terraform Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment'
        required: true
        default: 'dev'
      command:
        description: 'Terraform command'
        required: true
        default: 'plan'

jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.8

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan
```
eof

### Step 3: Commit and Push the New File

Once you have saved the file, you'll need to go back to your repository's root directory and run these commands to get it onto GitHub.

```bash
# Stage the newly created file for commit.
git add .

# Commit the new file with a clear message.
git commit -m "Add final, corrected terraform workflow file"

# Push to GitHub to trigger the workflow.
git push
