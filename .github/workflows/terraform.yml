name: Terraform CI/CD

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy (dev, staging, prod)"
        required: true
        default: dev
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Terraform (${{ github.event.inputs.environment || 'dev' }})
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # Required for OIDC
      contents: read

    env:
      TF_VAR_env: ${{ github.event.inputs.environment || 'dev' }}

    defaults:
      run:
        working-directory: terraform/environments/${{ github.event.inputs.environment || 'dev' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Optional: Debug OIDC token to verify sub/aud claims
      # Remove this step once trust policy is confirmed working
      - name: Debug OIDC token claims
        run: |
          echo "Requesting OIDC token..."
          ID_TOKEN=$(curl -s -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq -r '.value')
          echo "Decoded OIDC token claims:"
          echo "$ID_TOKEN" | cut -d "." -f2 | base64 -d | jq
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: https://token.actions.githubusercontent.com/.well-known/openid-configuration

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::016592542442:role/CybAcadGitHubActionsRole
          aws-region: us-east-1
          audience: sts.amazonaws.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Init (migrate state)
        run: terraform init -migrate-state

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve -input=false
