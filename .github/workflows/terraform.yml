name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:  # allows manual runs from the Actions tab

jobs:
  terraform:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        environment: [dev, staging]  # add prod here if needed

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # 1️⃣ Configure AWS credentials for backend + provider
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 2️⃣ Diagnostic step to confirm credentials are loaded
      - name: Check AWS credentials are loaded
        run: |
          if [ -n "$AWS_ACCESS_KEY_ID" ]; then
            echo "✅ AWS_ACCESS_KEY_ID is set"
          else
            echo "❌ AWS_ACCESS_KEY_ID is NOT set"
            exit 1
          fi
          if [ -n "$AWS_SECRET_ACCESS_KEY" ]; then
            echo "✅ AWS_SECRET_ACCESS_KEY is set"
          else
            echo "❌ AWS_SECRET_ACCESS_KEY is NOT set"
            exit 1
          fi

      # 3️⃣ Set up Terraform (v1.10.5 supports use_lockfile)
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.10.5

      # 4️⃣ Terraform Init (will now have AWS creds for S3 backend)
      - name: Terraform Init
        run: ./tf.sh ${{ matrix.environment }} init

      # 5️⃣ Terraform Plan
      - name: Terraform Plan
        run: ./tf.sh ${{ matrix.environment }} plan

      # Optional: Auto-apply on main
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/main'
      #   run: ./tf.sh ${{ matrix.environment }} apply -auto-approve
